# This vhost is managed by puppet, do not mess with it, terrible terrible things
# will happen.
#
#
# May be lifted from http://unicorn.bogomips.org/examples/nginx.conf

# this can be any application server, not just Unicorn/Rainbows!
upstream up_<%= appname %> {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server <%= unicorn_upstream %> fail_timeout=0 max_fails=0;
}

server {

<%= scope.function_template(['nginx/vhost/_listen.conf.erb']) %>

  server_name <%= srvname %><% if has_variable?( 'serveralias' )%> <%= serveraliases %><% end %>;

  root <%= rootpath %>/public;

  access_log  /var/log/nginx/<%= srvname %>.access.log;
  error_log   /var/log/nginx/<%= srvname %>.error.log;


  # tcp_nopush on; # off may be better for *some* Comet/long-poll stuff
  # tcp_nodelay off; # on may be better for some Comet/long-poll stuff

  # we haven't checked to see if Rack::Deflate on the app server is
  # faster or not than doing compression via nginx.  It's easier
  # to configure it all in one place here for static files and also
  # to disable gzip for clients who don't get gzip/deflate right.
  # There are other other gzip settings that may be needed used to deal with
  # bad clients out there, see http://wiki.nginx.org/NginxHttpGzipModule
  gzip on;
  gzip_http_version 1.0;
  gzip_proxied any;
  gzip_min_length 500;
  gzip_disable "MSIE [1-6]\.";
  gzip_types text/plain text/xml text/css
             text/comma-separated-values
             text/javascript application/x-javascript
             application/atom+xml;


  client_max_body_size 128m;

  # Prefer to serve static files directly from nginx to avoid unnecessary
  # data copies from the application server.
  #
  # try_files directive appeared in in nginx 0.7.27 and has stabilized
  # over time.  Older versions of nginx (e.g. 0.6.x) requires
  # "if (!-f $request_filename)" which was less efficient:
  # http://bogomips.org/unicorn.git/tree/examples/nginx.conf?id=v3.3.1#n127
  try_files $uri/index.html $uri.html $uri @app;

  location @app {
    # an HTTP header important enough to have its own Wikipedia entry:
    #   http://en.wikipedia.org/wiki/X-Forwarded-For
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # enable this if and only if you use HTTPS, this helps Rack
    # set the proper protocol for doing redirects:
    # proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Proto $scheme;

    # pass the Host: header from the client right along so redirects
    # can be set properly within the Rack application
    proxy_set_header Host $http_host;

    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

    # set "proxy_buffering off" *only* for Rainbows! when doing
    # Comet/long-poll/streaming.  It's also safe to set if you're using
    # only serving fast clients with Unicorn + nginx, but not slow
    # clients.  You normally want nginx to buffer responses to slow
    # clients, even with Rails 3.1 streaming because otherwise a slow
    # client can become a bottleneck of Unicorn.
    #
    # The Rack application may also set "X-Accel-Buffering (yes|no)"
    # in the response headers do disable/enable buffering on a
    # per-response basis.
    # proxy_buffering off;

    # #11047, redirect wrong server names elsewhere!
    # So if they aren't going to the defined vhost servername, then it will
    # redirect there properly.
    if ( $host != $server_name) {
      rewrite ^/.*$        https://$server_name/                  last;
    }

    # Moved from the wilds of apache in
    # https://github.com/puppetlabs/puppetlabs-modules/blob/master/dist/redmine/templates/redmine-unicorn.conf.erb
    if ($ssl_protocol = "") {
      rewrite ^/login(.*)$        https://$host/login$1           last;
      rewrite ^/account/register  https://$host/account/register  last;
      rewrite ^/my(.*)$           https://$host/my$1              last;
    }

    # Painful rewrite/redirect rules go here.
    #
    rewrite ^/projects/puppet/wiki/Exported_Resource/?                        http://docs.puppetlabs.com/guides/exported_resources.html        permanent;
    rewrite ^/projects/puppet/wiki/External_Nodes/?                           http://docs.puppetlabs.com/guides/external_nodes.html            permanent;
    rewrite ^/projects/puppet/wiki/Frequently_Asked_Questions/?               http://docs.puppetlabs.com/guides/faq.html                       permanent;
    rewrite ^/projects/puppet/wiki/Plugins_In_Modules/?                       http://docs.puppetlabs.com/guides/plugins_in_modules.html        permanent;
    rewrite ^/projects/puppet/wiki/Development_Creating_Custom_Types/?        http://docs.puppetlabs.com/guides/custom_types.html              permanent;
    rewrite ^/projects/puppet/wiki/Puppet_Executables/?                       http://docs.puppetlabs.com/guides/tools.html                     permanent;
    rewrite ^/projects/puppet/wiki/Module_Organisation/?                      http://docs.puppetlabs.com/guides/modules.html                   permanent;
    rewrite ^/projects/puppet/wiki/Language_Tutorial/?                        http://docs.puppetlabs.com/guides/language_guide.html            permanent;
    rewrite ^/projects/puppet/wiki/Getting_Started/?                          http://docs.puppetlabs.com/#getting_started                      permanent;
    rewrite ^/projects/puppet/wiki/Style_Guide/?                              http://docs.puppetlabs.com/guides/style_guide                    permanent;
    rewrite ^/projects/puppet/wiki/Puppet_Templating                          http://docs.puppetlabs.com/guides/templating.html                permanent;
    rewrite ^/projects/puppet/wiki/Puppet_Internals                           http://docs.puppetlabs.com/guides/puppet_internals.html          permanent;
    rewrite ^/projects/puppet/wiki/Virtual_Resources                          http://docs.puppetlabs.com/guides/virtual_resources.html         permanent;
    rewrite ^/projects/puppet/wiki/Using_Multiple_Environments                http://docs.puppetlabs.com/guides/environment.html               permanent;
    rewrite ^/projects/puppet/wiki/Writing_Your_Own_Functions                 http://docs.puppetlabs.com/guides/custom_functions.html          permanent;
    rewrite ^/projects/puppet/wiki/Puppet_Modules                             http://docs.puppetlabs.com/guides/modules.html                   permanent;
    rewrite ^/projects/1/wiki/Exported_Resource/?                             http://docs.puppetlabs.com/guides/exported_resources.html        permanent;
    rewrite ^/projects/1/wiki/External_Nodes/?                                http://docs.puppetlabs.com/guides/external_nodes.html            permanent;
    rewrite ^/projects/1/wiki/Frequently_Asked_Questions/?                    http://docs.puppetlabs.com/guides/faq.html                       permanent;
    rewrite ^/projects/1/wiki/Plugins_In_Modules/?                            http://docs.puppetlabs.com/guides/plugins_in_modules.html        permanent;
    rewrite ^/projects/1/wiki/Development_Creating_Custom_Types/?             http://docs.puppetlabs.com/guides/custom_types.html              permanent;
    rewrite ^/projects/1/wiki/Puppet_Executables/?                            http://docs.puppetlabs.com/guides/tools.html                     permanent;
    rewrite ^/projects/1/wiki/Module_Organisation/?                           http://docs.puppetlabs.com/guides/modules.html                   permanent;
    rewrite ^/projects/1/wiki/Language_Tutorial/?                             http://docs.puppetlabs.com/guides/language_guide.html            permanent;
    rewrite ^/projects/1/wiki/Getting_Started/?                               http://docs.puppetlabs.com/#getting_started                      permanent;
    rewrite ^/projects/1/wiki/Style_Guide/?                                   http://docs.puppetlabs.com/guides/style_guide                    permanent;
    rewrite ^/projects/1/wiki/Puppet_Templating                               http://docs.puppetlabs.com/guides/templating.html                permanent;
    rewrite ^/projects/1/wiki/Puppet_Internals                                http://docs.puppetlabs.com/guides/puppet_internals.html          permanent;
    rewrite ^/projects/1/wiki/Virtual_Resources                               http://docs.puppetlabs.com/guides/virtual_resources.html         permanent;
    rewrite ^/projects/1/wiki/Using_Multiple_Environments                     http://docs.puppetlabs.com/guides/environment.html               permanent;
    rewrite ^/projects/1/wiki/Writing_Your_Own_Functions                      http://docs.puppetlabs.com/guides/custom_functions.html          permanent;
    rewrite ^/projects/1/wiki/Puppet_Modules                                  http://docs.puppetlabs.com/guides/modules.html                   permanent;
    rewrite ^/projects/forge                                                  https://projects.puppetlabs.com/projects/module-site             permanent;
    rewrite ^/projects/puppet-forge                                           https://projects.puppetlabs.com/projects/module-site             permanent;
    rewrite ^/projects/1/wiki/Adding_Facts                                    http://docs.puppetlabs.com/guides/custom_facts.html              permanent;
        

    proxy_pass http://up_<%= appname %>;
  }

  # Rails error pages
  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= rootpath %>/public;
  }


  # Anything here is added by use of "magic" so is pretty jazzy.
  <%= magic %>
}

